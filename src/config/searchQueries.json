{
	"searches": [
		{
			"name": "Search",
			"description": "Free text search in Object",
			"terms": [
				{
					"term": "object",
					"name": "Search term",
					"type": "string",
					"value": ""
				}
			],
			"query": [
				"prefix : <http://my_info_graph/>",
				"prefix schema: <https://schema.org/>",
				"prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>",
				"prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>",
				"",
				"CONSTRUCT { ?Subject ?Predicate ?Object. }",
				"where {",
				"    ?Subject ?Predicate ?Object .",
				"    FILTER regex(?Object, '??object','i')",
				"} limit 50 "
			]
		},
		{
			"name": "Search all",
			"description": "Free text search in Object and Subject",
			"terms": [
				{
					"term": "object",
					"name": "Search term",
					"type": "string",
					"value": ""
				}
			],
			"query": [
				"prefix : <http://my_info_graph/>",
				"prefix schema: <https://schema.org/>",
				"prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>",
				"prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>",
				"",
				"CONSTRUCT { ?Subject ?Predicate ?Object. }",
				"where {",
				"    ?Subject ?Predicate ?Object .",
				"    {FILTER regex(?Object, '??object','i')}",
				"     UNION",
				"    {FILTER regex(?Subject, '??object','i')}",
				"} limit 50 "
			]
		},
		{
			"name": "Search in Subject",
			"description": "Search node in subject",
			"terms": [
				{
					"term": "node",
					"name": "Node",
					"type": "string",
					"value": ""
				}
			],
			"query": [
				"prefix : <http://my_info_graph/>",
				"prefix schema: <https://schema.org/>",
				"prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>",
				"prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>",
				"",
				"CONSTRUCT { ?Subject ?Predicate ?Node. }",
				"where {",
				"    VALUES ?Subject {",
				"         :??node",
				"    }",
				"    ?Subject ?Predicate ?Object .",
				"} limit 50 "
			]
		},
		{
			"name": "Search in Object",
			"description": "Search node in object",
			"terms": [
				{
					"term": "node",
					"name": "Node",
					"type": "string",
					"value": ""
				}
			],
			"query": [
				"prefix : <http://my_info_graph/>",
				"prefix schema: <https://schema.org/>",
				"prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>",
				"prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>",
				"",
				"CONSTRUCT { ?Subject ?Predicate ?Node. }",
				"where {",
				"    VALUES ?Subject {",
				"         :??node",
				"    }",
				"    ?Subject ?Predicate ?Object .",
				"} limit 50 "
			]
		},
		{
			"name": "Search both",
			"description": "Search node in Subject or Object",
			"terms": [
				{
					"term": "node",
					"name": "Node",
					"type": "string",
					"value": ""
				}
			],
			"query": [
				"prefix : <http://my_info_graph/>",
				"prefix schema: <https://schema.org/>",
				"prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>",
				"prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>",
				"",
				"CONSTRUCT {",
					"    :??node ?edge ?newNodeLTR .",
					"    ?newNodeRTL ?edge :??node .",
					"} WHERE {",
					"    {",
					"        # Left to right relations (starting IRI is the subject)",
					"        :??node ?edge ?newNodeLTR .",
					"",
					"        # Select only IRIs",
					"        FILTER(isIRI(?newNodeLTR))",
					"    } UNION {",
					"        # Right to left relations (starting IRI is the object)",
					"        ?newNodeRTL ?edge :??node .",
					"",
					"        # Select only IRIs",
					"        FILTER(isIRI(?newNodeRTL))",
					"    }",
					"    FILTER(isIRI(:??node))",
					"} ORDER BY ?edge LIMIT 50"
			]
		}
	]
}
